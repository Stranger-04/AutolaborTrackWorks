<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!-- 设置使用仿真时间 -->
    <param name="/use_sim_time" value="true" />

    <!-- 启动Gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find track)/worlds/track_world.world"/>
        <arg name="paused" value="false"/>
        <arg name="gui" value="true"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
        <!-- 添加显示相关参数 -->
        <env name="GAZEBO_MODEL_PATH" value="$(find track)/models:$(optenv GAZEBO_MODEL_PATH)"/>
        <env name="DISPLAY" value=":0"/>
        <env name="LIBGL_ALWAYS_SOFTWARE" value="1"/>
    </include>

    <!-- 加载机器人描述参数 -->
    <group ns="target_car">
        <param name="robot_description" 
               command="$(find xacro)/xacro $(find track)/urdf/car.urdf.xacro robot_type:=target_car" />
        
        <!-- 生成目标车辆 -->
        <node name="spawn_target" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
              args="-urdf 
                    -param robot_description
                    -model target_car
                    -x 0.0 -y 0.0 -z 0.05"/>
        
        <!-- 键盘控制节点 -->
        <node name="keyboard_control" pkg="track" type="keyboard_control" output="screen">
            <remap from="cmd_vel" to="cmd_vel"/>
        </node>

        <!-- 状态发布 -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    </group>

    <!-- 跟踪车配置 -->
    <group ns="track_car">
        <param name="robot_description" 
               command="$(find xacro)/xacro $(find track)/urdf/car.urdf.xacro robot_type:=track_car" />
        
        <!-- 生成跟踪车辆 -->
        <node name="spawn_tracker" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
              args="-urdf 
                    -param robot_description
                    -model track_car
                    -x -2.0 -y 0.0 -z 0.05"/>

        <!-- 状态发布 -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

        <!-- 视觉跟踪节点 -->
        <node name="vision_node" pkg="track" type="vision_node.py" output="screen">
            <remap from="/camera/image_raw" to="camera/image_raw"/>
        </node>
    </group>

    <!-- 启动rviz可视化 -->
    <node name="rviz" pkg="rviz" type="rviz" 
          args="-d $(find track)/rviz/tracking_simulation.rviz"/>
</launch>
